// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: streaming_rpc_meta.proto

package metapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrameType int32

const (
	FrameType_FRAME_TYPE_UNKNOWN  FrameType = 0
	FrameType_FRAME_TYPE_RST      FrameType = 1
	FrameType_FRAME_TYPE_CLOSE    FrameType = 2
	FrameType_FRAME_TYPE_DATA     FrameType = 3
	FrameType_FRAME_TYPE_FEEDBACK FrameType = 4
)

// Enum value maps for FrameType.
var (
	FrameType_name = map[int32]string{
		0: "FRAME_TYPE_UNKNOWN",
		1: "FRAME_TYPE_RST",
		2: "FRAME_TYPE_CLOSE",
		3: "FRAME_TYPE_DATA",
		4: "FRAME_TYPE_FEEDBACK",
	}
	FrameType_value = map[string]int32{
		"FRAME_TYPE_UNKNOWN":  0,
		"FRAME_TYPE_RST":      1,
		"FRAME_TYPE_CLOSE":    2,
		"FRAME_TYPE_DATA":     3,
		"FRAME_TYPE_FEEDBACK": 4,
	}
)

func (x FrameType) Enum() *FrameType {
	p := new(FrameType)
	*p = x
	return p
}

func (x FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_streaming_rpc_meta_proto_enumTypes[0].Descriptor()
}

func (FrameType) Type() protoreflect.EnumType {
	return &file_streaming_rpc_meta_proto_enumTypes[0]
}

func (x FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FrameType.Descriptor instead.
func (FrameType) EnumDescriptor() ([]byte, []int) {
	return file_streaming_rpc_meta_proto_rawDescGZIP(), []int{0}
}

type StreamSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId     int64 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	NeedFeedback bool  `protobuf:"varint,2,opt,name=need_feedback,json=needFeedback,proto3" json:"need_feedback,omitempty"`
	Writable     bool  `protobuf:"varint,3,opt,name=writable,proto3" json:"writable,omitempty"`
}

func (x *StreamSettings) Reset() {
	*x = StreamSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rpc_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSettings) ProtoMessage() {}

func (x *StreamSettings) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rpc_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSettings.ProtoReflect.Descriptor instead.
func (*StreamSettings) Descriptor() ([]byte, []int) {
	return file_streaming_rpc_meta_proto_rawDescGZIP(), []int{0}
}

func (x *StreamSettings) GetStreamId() int64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *StreamSettings) GetNeedFeedback() bool {
	if x != nil {
		return x.NeedFeedback
	}
	return false
}

func (x *StreamSettings) GetWritable() bool {
	if x != nil {
		return x.Writable
	}
	return false
}

type StreamFrameMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId        int64     `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	SourceStreamId  int64     `protobuf:"varint,2,opt,name=source_stream_id,json=sourceStreamId,proto3" json:"source_stream_id,omitempty"`
	FrameType       FrameType `protobuf:"varint,3,opt,name=frame_type,json=frameType,proto3,enum=brpc.FrameType" json:"frame_type,omitempty"`
	HasContinuation bool      `protobuf:"varint,4,opt,name=has_continuation,json=hasContinuation,proto3" json:"has_continuation,omitempty"`
	Feedback        *Feedback `protobuf:"bytes,5,opt,name=feedback,proto3" json:"feedback,omitempty"`
}

func (x *StreamFrameMeta) Reset() {
	*x = StreamFrameMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rpc_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFrameMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFrameMeta) ProtoMessage() {}

func (x *StreamFrameMeta) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rpc_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFrameMeta.ProtoReflect.Descriptor instead.
func (*StreamFrameMeta) Descriptor() ([]byte, []int) {
	return file_streaming_rpc_meta_proto_rawDescGZIP(), []int{1}
}

func (x *StreamFrameMeta) GetStreamId() int64 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *StreamFrameMeta) GetSourceStreamId() int64 {
	if x != nil {
		return x.SourceStreamId
	}
	return 0
}

func (x *StreamFrameMeta) GetFrameType() FrameType {
	if x != nil {
		return x.FrameType
	}
	return FrameType_FRAME_TYPE_UNKNOWN
}

func (x *StreamFrameMeta) GetHasContinuation() bool {
	if x != nil {
		return x.HasContinuation
	}
	return false
}

func (x *StreamFrameMeta) GetFeedback() *Feedback {
	if x != nil {
		return x.Feedback
	}
	return nil
}

type Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumedSize int64 `protobuf:"varint,1,opt,name=consumed_size,json=consumedSize,proto3" json:"consumed_size,omitempty"`
}

func (x *Feedback) Reset() {
	*x = Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rpc_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feedback) ProtoMessage() {}

func (x *Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rpc_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feedback.ProtoReflect.Descriptor instead.
func (*Feedback) Descriptor() ([]byte, []int) {
	return file_streaming_rpc_meta_proto_rawDescGZIP(), []int{2}
}

func (x *Feedback) GetConsumedSize() int64 {
	if x != nil {
		return x.ConsumedSize
	}
	return 0
}

var File_streaming_rpc_meta_proto protoreflect.FileDescriptor

var file_streaming_rpc_meta_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x70, 0x63, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x72, 0x70, 0x63,
	0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x68,
	0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x22, 0x2f, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x2a, 0x7b, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x52, 0x41, 0x4d,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x52, 0x41, 0x4d, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x04,
	0x42, 0x51, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x72, 0x70, 0x63, 0x42, 0x11, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x63, 0x65, 0x78,
	0x69, 0x6e, 0x2f, 0x62, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x62, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x74, 0x64, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streaming_rpc_meta_proto_rawDescOnce sync.Once
	file_streaming_rpc_meta_proto_rawDescData = file_streaming_rpc_meta_proto_rawDesc
)

func file_streaming_rpc_meta_proto_rawDescGZIP() []byte {
	file_streaming_rpc_meta_proto_rawDescOnce.Do(func() {
		file_streaming_rpc_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_streaming_rpc_meta_proto_rawDescData)
	})
	return file_streaming_rpc_meta_proto_rawDescData
}

var file_streaming_rpc_meta_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_streaming_rpc_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_streaming_rpc_meta_proto_goTypes = []interface{}{
	(FrameType)(0),          // 0: brpc.FrameType
	(*StreamSettings)(nil),  // 1: brpc.StreamSettings
	(*StreamFrameMeta)(nil), // 2: brpc.StreamFrameMeta
	(*Feedback)(nil),        // 3: brpc.Feedback
}
var file_streaming_rpc_meta_proto_depIdxs = []int32{
	0, // 0: brpc.StreamFrameMeta.frame_type:type_name -> brpc.FrameType
	3, // 1: brpc.StreamFrameMeta.feedback:type_name -> brpc.Feedback
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_streaming_rpc_meta_proto_init() }
func file_streaming_rpc_meta_proto_init() {
	if File_streaming_rpc_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streaming_rpc_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rpc_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFrameMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rpc_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streaming_rpc_meta_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_streaming_rpc_meta_proto_goTypes,
		DependencyIndexes: file_streaming_rpc_meta_proto_depIdxs,
		EnumInfos:         file_streaming_rpc_meta_proto_enumTypes,
		MessageInfos:      file_streaming_rpc_meta_proto_msgTypes,
	}.Build()
	File_streaming_rpc_meta_proto = out.File
	file_streaming_rpc_meta_proto_rawDesc = nil
	file_streaming_rpc_meta_proto_goTypes = nil
	file_streaming_rpc_meta_proto_depIdxs = nil
}
